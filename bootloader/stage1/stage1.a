;=====================================
; nasmw boot.asm -f bin -o boot.bin
; partcopy boot.bin 0 200 -f0

[ORG 0x7c00]      ; add to offsets
 jmp main
 
%include "print.inc"
%include "floppy.inc"

main:
   xor ax, ax    ; make it zero
   mov ds, ax   ; DS=0
   mov es, ax	; ES=0
   mov ss, ax   ; stack starts at 0
   mov sp, 0x9c00   ; 200h past code start
      
   mov si, newline
   call sprint
   
   mov si, msg
   call sprint

   call floppy_setup
   
   mov si, newline
   call sprint
      
   mov ax, 0x1000
   mov es, ax	;Set segment
   mov ax, 1
   mov bx, 0
   mov cx, 16	;Load first 16 sectors
   
load_loop:
   push ax
   push bx
   push cx
   call floppy_read
   pop cx
   pop bx
   pop ax
   
   inc ax
   add bx, 0x200
   dec cx
   jnz load_loop
   
   jmp 0x1000:0 ;Jump to loaded code
 
hang:
   jmp hang
   
msg   db "Stage 1 bootloading",10, 13, 0
newline db 10,13
times 510-($-$$) db 0
db 0x55
db 0xAA
stg1_end:
;==================================